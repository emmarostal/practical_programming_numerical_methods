Linear equations:
1: ax = b , hvis a!=0, x=b/a

System of linear equations:
A_11*x_1+A_12*x_2=b_1
A_21*x_1+A_22*x_2=b_2

Matrix notation:
Ax=b

Investigate A to see if there are solutions, by looking at the determinant.
If A is invertible, we can find x=A^-1*b 
- numerically annoying - we go the other way

Method: transform the square matrix to triangular form 
(nothing below the diagonal)
the determinant is the product of the diagonal elements.
When the determinant is not zero, we can divide with peace of mind.
to be solved iteratively from the bottom row (a run of back substitutions)
A_nn*x_n=b_n
x_n=1/A_nn*b_n

next row:
A_n-1,n-1*x_n-1+A_n-1,n*x_n=b_n-1
makes use of x_n, which has already been determined.

How to get the triangular form:
LU decomposition (LU factorization) - fast, works for square matrixes
Uses the Dolittle algorthm
A=L*U
Normally we set the diagonal elements in L to 1. This gives us enough 
conditions to solve the system.

Now we have
LUx=b
Ly=b, with Ux=y
Det(A)=Det(L)*Det(U)=1*Det(U)=product of diagonal elements in U

Problem: A_11 is zero, it does not necessarily imply that A is not invertible.
If this is the case, you have to do this with interchanged columns - we will not
do this. instead we use a method which always works.

QR decomposition: see pdf - can work with non-square matrices.


use matrix and vector classes


Next lecture: 
In place use vector b and make vector x there. (void)
Otherwise allocate an extra vector x as a parameter and fill it in. (vector)

MONO_PATH=/path/to/my/dlls mono main.exe
mono gets acces to the library - not necessary for this course - just keep your
dlls in the same directory as the exe file.




